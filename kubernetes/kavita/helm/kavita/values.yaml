# Default values for kavita.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  #  Due to issue https://github.com/Kareadita/Kavita/pull/1832, we can't use the official image as we don't want to run as root
  #  repository: jvmilazz0/kavita
  repository: lscr.io/linuxserver/kavita
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

mangaManager:
  enabled: false
  image:
    repository: thepromidius/manga-manager
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: latest
  service:
    type: ClusterIP
    port: 3000
  rdp:
    enabled: false
    service:
      type: ClusterIP
      port: 3389
# https://github.com/MangaManagerORG/Manga-Manager/blob/main/docker-compose.yml
  env: {}
  volumeMounts: []
  storage:
    config:
      # Should the PVC be deleted when the chart is uninstalled?
      deleteOnUninstall: false
      accessMode: ReadWriteOnce
      size: 1Gi
      # If you want to use an existing claim, set this to true
      # Setting this value disables all the other storage options
      existingClaim: ""
  podAnnotations: {}
  podLabels: {}
  ingressPath: /manga-manager
  auth: {}
  # fqdn: manga-manager-oauth.example.com

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

# Have a look to https://github.com/Kareadita/Kavita/blob/develop/Dockerfile
env: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  #  runAsUser: 1000
  #  runAsGroup: 3000
  #  fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 5000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

storage:
  config:
    # Should the PVC be deleted when the chart is uninstalled?
    deleteOnUninstall: false
    accessMode: ReadWriteOnce
    size: 1Gi
    storageClass: ""
    # If you want to use an existing claim, set this to true
    # Setting this value disables all the other storage options
    existingClaim: ""

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
